{"version":3,"sources":["../node_modules/pkg/confidential_identity_wasm_bg.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/pkg/confidential_identity_wasm.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","process_create_cdd_id","cdd_claim","retptr","value","ptr0","len0","r0","r1","process_create_claim_proof","scoped_claim","ptr1","len1","process_create_mocked_investor_uid","did","f","__wbindgen_string_new","arg0","arg1","__wbg_self_86b4b13392c7af56","self","apply","this","arguments","e","__wbindgen_object_drop_ref","__wbg_static_accessor_MODULE_452b4680e8614c81","__wbg_require_f5521a5b85ad2542","arg2","__wbg_crypto_b8c92eaac23d0d80","crypto","__wbg_msCrypto_9ad6677321a08dd8","msCrypto","__wbindgen_is_undefined","__wbg_getRandomValues_dd27e6b0652b3236","getRandomValues","__wbg_getRandomValues_e57c9b75ddead065","__wbg_randomFillSync_d2ba53160aec6aba","randomFillSync","__wbg_buffer_3f12a1c608c6d04e","__wbg_length_c645e7c02233b440","__wbg_new_c6c0228e6d22a2f9","__wbg_set_b91afac9fd216d99","__wbg_newwithlength_a429e08f8a8fe4b3","__wbg_subarray_02e2fcfa6b285cb2","__wbindgen_throw","Error","__wbindgen_rethrow","__wbindgen_memory","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/3.318d20bf.chunk.js","sourcesContent":["import * as wasm from './confidential_identity_wasm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* Creates a CDD_ID from investor did and investor uid\n*\n* # Arguments\n* * `cdd_claim` a stringified json with the following format:\n*   { \"investor_did\": [32_bytes_array], \"investor_unique_id\": [16_bytes_array] }\n*\n* # Errors\n* * Failure to deserialize the cdd claim.\n* * Failure to serialize the cdd id.\n* @param {string} cdd_claim\n* @returns {string}\n*/\nexport function process_create_cdd_id(cdd_claim) {\n    try {\n        const retptr = wasm.__wbindgen_export_0.value - 16;\n        wasm.__wbindgen_export_0.value = retptr;\n        var ptr0 = passStringToWasm0(cdd_claim, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.process_create_cdd_id(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_export_0.value += 16;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Creates a scope claim proof for an investor from investor did, investor uid, and scope did.\n*\n* # Arguments\n* * `cdd_claim` a stringified json with the following format:\n*   { \"investor_did\": [32_bytes_array], \"investor_unique_id\": [16_bytes_array] }\n* * `scoped_claim` a stringified json with the following format:\n*   { \"scope_did\":[12_bytes_array], \"investor_unique_id\":[16_bytes_array] }\n*\n* # Errors\n* * Failure to deserialize the cdd claim.\n* * Failure to deserialize the scope claim.\n* * Failure to serialize the proof.\n* @param {string} cdd_claim\n* @param {string} scoped_claim\n* @returns {string}\n*/\nexport function process_create_claim_proof(cdd_claim, scoped_claim) {\n    try {\n        const retptr = wasm.__wbindgen_export_0.value - 16;\n        wasm.__wbindgen_export_0.value = retptr;\n        var ptr0 = passStringToWasm0(cdd_claim, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(scoped_claim, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.process_create_claim_proof(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_export_0.value += 16;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} did\n* @returns {string}\n*/\nexport function process_create_mocked_investor_uid(did) {\n    try {\n        const retptr = wasm.__wbindgen_export_0.value - 16;\n        wasm.__wbindgen_export_0.value = retptr;\n        var ptr0 = passStringToWasm0(did, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.process_create_mocked_investor_uid(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_export_0.value += 16;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_self_86b4b13392c7af56 = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_static_accessor_MODULE_452b4680e8614c81 = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_require_f5521a5b85ad2542 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_crypto_b8c92eaac23d0d80 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_msCrypto_9ad6677321a08dd8 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_getRandomValues_dd27e6b0652b3236 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_e57c9b75ddead065 = function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n};\n\nexport const __wbg_randomFillSync_d2ba53160aec6aba = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_buffer_3f12a1c608c6d04e = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_length_c645e7c02233b440 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __wbg_new_c6c0228e6d22a2f9 = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_set_b91afac9fd216d99 = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport const __wbg_newwithlength_a429e08f8a8fe4b3 = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_subarray_02e2fcfa6b285cb2 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as wasm from \"./confidential_identity_wasm_bg.wasm\";\nexport * from \"./confidential_identity_wasm_bg.js\";"],"sourceRoot":""}